//    MIT NON-AI License
//
//    Copyright (c) 2022-2024 Aleksei Kotelnikov(gudron2s@gmail.com)
//
//    Permission is hereby granted, free of charge, to any person obtaining a copy of the software and associated documentation files (the "Software"),
//    to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
//    and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions.
//
//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
//
//    In addition, the following restrictions apply:
//
//    1. The Software and any modifications made to it may not be used for the purpose of training or improving machine learning algorithms,
//    including but not limited to artificial intelligence, natural language processing, or data mining. This condition applies to any derivatives,
//    modifications, or updates based on the Software code. Any usage of the Software in an AI-training dataset is considered a breach of this License.
//
//    2. The Software may not be included in any dataset used for training or improving machine learning algorithms,
//    including but not limited to artificial intelligence, natural language processing, or data mining.
//
//    3. Any person or organization found to be in violation of these restrictions will be subject to legal action and may be held liable
//    for any damages resulting from such use.
//
//    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
//    OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

syntax = "proto3";

package ethereum;

option go_package = "github.com/crypto-bundle/bc-wallet-eth-hdwallet/pkg/proto";

message AccessTuple {
  // Address - slice of bytes with go-ethereum common.Address type - go-ethereum/common/types.go
  bytes Address = 1;
  // Address - slice of slice of bytes with go-ethereum common.Hash type - go-ethereum/common/types.go
  repeated bytes StorageKeys = 2;
}

message SignatureData {
  // V - slice of bytes from big.Int
  bytes V = 1;
  // R - slice of bytes from big.Int
  bytes R = 2;
  // S - slice of bytes from big.Int
  bytes S = 3;
}

message LegacyTxData {
  uint64 Nonce = 1;
  // GasPrice - slice of bytes from big.Int
  bytes GasPrice = 2;
  uint64 GasLimit = 3;
  // Address - slice of bytes with go-ethereum common.Address type - go-ethereum/common/types.go
  bytes ToAddress = 4;
  // Value - slice of bytes from big.Int
  bytes Value = 5;
  bytes Data = 6;
  SignatureData SignParameters = 7;
}

message DynamicFeeTxData {
  // ChainID - slice of bytes from big.Int
  bytes ChainID = 1;
  uint64 Nonce = 2;
  // GasTipCap - slice of bytes from big.Int a.k.a. maxPriorityFeePerGas
  bytes GasTipCap = 3;
  // GasPrice - slice of bytes from big.Int a.k.a. maxFeePerGas
  bytes GasFeeCap = 4;
  uint64 GasLimit = 5;
  // Address - slice of bytes with go-ethereum common.Address type - go-ethereum/common/types.go
  bytes ToAddress = 6;
  // Value - slice of bytes from big.Int
  bytes Value = 7;
  bytes Data = 8;
  repeated AccessTuple AccessList = 9;
  SignatureData SignParameters = 10;
}

message AccessListTxData {
  // ChainID - slice of bytes from big.Int
  bytes ChainID = 1;
  uint64 Nonce = 2;
  // GasPrice - slice of bytes from big.Int
  bytes GasPrice = 3;
  uint64 GasLimit = 4;
  // Address - slice of bytes with go-ethereum common.Address type - go-ethereum/common/types.go
  bytes ToAddress = 5;
  // Value - slice of bytes from big.Int
  bytes Value = 6;
  bytes Data = 7;
  repeated AccessTuple AccessList = 8;
  SignatureData SignParameters = 9;
}